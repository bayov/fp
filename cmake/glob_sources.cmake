# Updates the <content> of the give <file> if the content changed.
function(_update_file file content)
    set(old_content "")
    if(EXISTS "${file}")
        file(READ "${file}" old_content)
    endif()
    if(NOT old_content STREQUAL content)
        file(WRITE "${file}" "${content}")
    endif()
endfunction()

# The name of the sources file, used to keep track of added/removed sources.
set(_SOURCES_FILE_NAME "CMakeSources.cmake")

# The globbing-expressions used when looking up source files.
set(_SOURCES_GLOB *.h *.cpp)

# Globbing of source files, using a workaround that allows CMake to rebuild when
# new files are added/removed.
#
#       glob_sources(<output_variable> [<globbing-expressions>...])
#
# The given <output_variable> will also be used as the filename for the auto-
# generated cmake sources list (which is used as a dependency, allowing rebuilds
# on source adds/removes).
#
# For example:
#
#       glob_sources(SOURCES *.cpp)
#       glob_sources(HEADERS *.h)
#
#       // `SOURCES.cmake` and `HEADERS.cmake` will be created and updated, and
#       // they should be added to source control to trigger rebuilds for all
#       // collaborators.
#
function(glob_sources output_variable)
    file(GLOB_RECURSE sources RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" ${ARGN})
    list(REMOVE_DUPLICATES sources)
    list(SORT sources)

    set(sources_file "${CMAKE_CURRENT_SOURCE_DIR}/${output_variable}.cmake")
    list(APPEND sources PARENT_SCOPE)
    string(REPLACE ";" "\n    " content "${sources}")
    set(content "set(\n    ${output_variable}\n    ${content}\n)\n")
    set(content "# automatically generated by `glob_sources()`\n${content}")
    _update_file(${sources_file} "${content}")

    include(${sources_file})
endfunction()
